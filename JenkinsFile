pipeline {
  agent {
    docker {
      image 'huzaifafev/maven-docker-agent'
      args '-v /var/run/docker.sock:/var/run/docker.sock --user root'
    }
  }

  environment {
    GIT_REPO_NAME = "Spring-boot-application"
    DEPLOYMENT_FILE_PATH = "java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'pwd && ls -la && git status'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.0.116:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t huzaifafev/spring-boot-app-cicd:${BUILD_NUMBER} .'
      }
    }

    stage('Push Docker Image') {
      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            docker.image("huzaifafev/spring-boot-app-cicd:${BUILD_NUMBER}").push()
          }
        }
      }
    }

    stage('Update Deployment File & Push') {
      steps {
        dir("${env.WORKSPACE}") {
          withCredentials([
            usernamePassword(credentialsId: 'github', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN'),
            string(credentialsId: 'git-user-name', variable: 'GIT_USER_NAME'),
            string(credentialsId: 'git-user-email', variable: 'GIT_USER_EMAIL')
          ]) {
            sh '''
              git config user.name "$GIT_USER_NAME"
              git config user.email "$GIT_USER_EMAIL"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" $DEPLOYMENT_FILE_PATH
              git add $DEPLOYMENT_FILE_PATH
              git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
              git remote set-url origin https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/${GIT_REPO_NAME}.git
              git push origin HEAD:main
            '''
          }
        }
      }
    }
  }
}