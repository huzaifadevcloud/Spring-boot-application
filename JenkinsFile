pipeline {
  agent any

  environment {
    SONAR_URL = "http://34.201.34.124:9000/"
    DOCKER_IMAGE = "huzaifafev/spring-boot-app-cicd:${BUILD_NUMBER}"
    DOCKERFILE_LOCATION = "./Dockerfile"
    GIT_REPO_NAME = "Spring-boot-application"
    GIT_USER_NAME = "huzaifadevcloud"
  }

  stages {
    stage('Build & Test Inside Docker') {
      steps {
        script {
          docker.image('huzaifafev/spring-boot-app-cicd:v1').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {
            sh '''
              echo "âœ… Inside Docker Container"
              ls -la
              mvn clean package
            '''
          }
        }
      }
    }

    stage('Static Code Analysis (SonarQube)') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          script {
            docker.image('huzaifafev/spring-boot-app-cicd:v1').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {
              sh '''
                echo "ðŸ“¦ Running SonarQube Scan..."
                mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url='${SONAR_URL}'
              '''
            }
          }
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker build -t ${DOCKER_IMAGE} -f ${DOCKERFILE_LOCATION} .
            docker push ${DOCKER_IMAGE}
          '''
        }
      }
    }

    stage('Update Deployment Manifest') {
      steps {
        withCredentials([
          usernamePassword(credentialsId: 'github', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN'),
          string(credentialsId: 'git-user-name', variable: 'GIT_USER_NAME'),
          string(credentialsId: 'git-user-email', variable: 'GIT_USER_EMAIL')
        ]) {
          sh '''
            git config --global user.name "$GIT_USER_NAME"
            git config --global user.email "$GIT_USER_EMAIL"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "ðŸš€ Update image tag to ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
